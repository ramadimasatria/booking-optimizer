{"version":3,"sources":["icons/right-arrow.svg","components/BookingItem.tsx","components/Separator.tsx","components/BookingOrder.tsx","booking-manager.ts","components/App.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","BookingItem","_ref","booking","react_default","a","createElement","className","id","start","src","rightArrow","alt","end","Separator","props","concat","relocate","BookingOrder","order","map","idx","arr","next","Fragment","key","src_components_BookingItem","src_components_Separator","BookingManager","original","optimized","originalRelocations","optimizedRelocations","bookingsById","connected","starts","ends","_this","this","forEach","Error","groupStartsEnds","pair","getMostPair","connectByPairKey","Object","values","flat","getBookingById","keys","length","_this2","mostPair","curPair","Math","min","parseInt","_this3","_this3$getConnectedDa","getConnectedData","push","ids","_this4","targetId","toConsumableArray","slice","pairKey","_this5","commons","filter","_this5$getConnectedDa","connectBookings","includes","startId","shift","endId","bookingManager","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","refJsonField","state","React","createRef","optimize","bind","assertThisInitialized","fieldState","current","jsonData","jsObject","rawData","e","alert","setState","es","placeholder","height","theme","width","ref","style","textAlign","marginTop","onClick","src_components_BookingOrder","Component","ReactDOM","render","src_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.bd7adf1f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/right-arrow.279196e3.svg\";","import React from 'react';\nimport { Booking } from '../types';\nimport './BookingItem.scss';\nimport rightArrow from '../icons/right-arrow.svg';\n\ninterface Props {\n  booking: Booking\n}\n\nexport const BookingItem: React.FC<Props> = ({ booking }) => {\n  return (\n    <div className=\"booking-item\">\n      <span className=\"booking-item__id\">{ booking.id }</span>\n      <span className=\"booking-item__start\">{ booking.start }</span>\n      <span className=\"booking-item__arrow\"><img src={rightArrow} alt='arrow' /></span>\n      <span className=\"booking-item__end\">{ booking.end }</span>\n    </div>\n  )\n}\n\nexport default BookingItem;\n","import React from 'react';\nimport './Separator.scss';\nimport rightArrow from '../icons/right-arrow.svg';\n\ninterface Props {\n  relocate: boolean\n}\n\nconst Separator: React.FC<Props> = (props) => (\n  <span className={`separator ${props.relocate && 'separator--relocate'}`} >\n    <img src={rightArrow} alt=\"arrow\"/>\n  </span>\n)\n\nexport default Separator;\n","import React from 'react';\nimport { Booking } from '../types';\nimport BookingItem from './BookingItem';\nimport Separator from './Separator';\nimport './BookingOrder.scss';\n\ninterface Props {\n  order: Booking[]\n}\n\nexport const BookingOrder: React.FC<Props> = ({ order }) => {\n  return (\n    <div className=\"booking-order\">\n      {\n        order.map((booking, idx, arr) => {\n          const next = arr[idx + 1]\n          const relocate = next && next.start !== booking.end;\n\n          return (\n            <React.Fragment key={ booking.id }>\n              <BookingItem booking={ booking } />\n              {\n                next && <Separator relocate={relocate} />\n              }\n            </React.Fragment>\n          )\n        })\n      }\n    </div>\n  )\n}\n\nexport default BookingOrder;\n","import { BookingId, Booking } from './types';\n\ninterface BookingManagerInterface {\n  original?: Booking[],\n  optimized?: Booking[],\n  originalRelocations?: number,\n  optimizedRelocations?: number,\n  optimize: (bookings: Booking[]) => void\n}\n\nclass BookingManager implements BookingManagerInterface {\n  public original: Booking[] = []\n  public optimized: Booking[] = []\n  public originalRelocations: number = 0\n  public optimizedRelocations: number = 0\n\n  private bookingsById: {\n    [key: string]: Booking\n  } = {}\n  private connected: {\n    [key: string]: BookingId[]\n  } = {}\n  private starts: {\n    [key: string]: BookingId[]\n  } = {}\n  private ends: {\n    [key: string]: BookingId[]\n  } = {}\n\n  public optimize(original: Booking[]): void {\n    this.original = original\n    this.originalRelocations = 0\n\n    this.original.forEach((booking, idx) => {\n      // validate booking data\n      if (!booking.id || !booking.start || !booking.end) {\n        throw(new Error('Invalid data'))\n      }\n\n      // Assign initial bookingsById & connected data\n      this.bookingsById[booking.id] = booking\n      this.connected[booking.id] = [booking.id]\n\n      // count original relocations\n      const next = this.original[idx + 1]\n      if (next && next.start !== booking.end) {\n        this.originalRelocations++\n      }\n    })\n\n    // Group bookings by starts & ends, pair them by the most available pairs\n    // repeat until there is no pair availabe\n    this.groupStartsEnds()\n    let pair = this.getMostPair()\n    while (pair) {\n      this.connectByPairKey(pair)\n      this.groupStartsEnds()\n      pair = this.getMostPair()\n    }\n\n    // Construct optimized orders\n    this.optimized = Object.values(this.connected).flat().map(id =>\n      this.getBookingById(id)\n    )\n    this.optimizedRelocations = Object.keys(this.connected).length - 1\n  }\n\n  // PRIVATE METHODS\n\n  //\n  private getBookingById(id: BookingId): Booking {\n    return this.bookingsById[id]\n  }\n\n  // Return id, start & end data of connected bookings\n  private getConnectedData(id: BookingId): Booking {\n    const arr = this.connected[id]\n    const start = this.getBookingById(arr[0]).start\n    const end = this.getBookingById(arr[arr.length - 1]).end\n\n    return {\n      id,\n      start,\n      end\n    }\n  }\n\n  // Find most pair available\n  private getMostPair(): number | null {\n    let pair = 0\n    let mostPair = 0\n\n    Object.keys(this.starts).forEach(key => {\n      if (!this.ends[key]) return\n\n      const curPair = Math.min(this.starts[key].length, this.ends[key].length)\n      if (curPair > mostPair) {\n        mostPair = curPair\n        pair = parseInt(key, 10)\n      }\n    })\n\n    return mostPair > 0 ? pair : null\n  }\n\n  // Group bookings by starts & ends\n  private groupStartsEnds(): void {\n    const starts: {\n      [key: string]: BookingId[]\n    } = {}\n\n    const ends:{\n      [key: string]: BookingId[]\n    } = {}\n\n    Object.keys(this.connected).forEach(id => {\n      const { start, end } = this.getConnectedData(id)\n      if (!starts[start]) {\n        starts[start] = []\n      }\n\n      if (!ends[end]) {\n        ends[end] = []\n      }\n\n      starts[start].push(id)\n      ends[end].push(id)\n    })\n\n    this.starts = starts\n    this.ends = ends\n  }\n\n  // Connect multiple bookings\n  private connectBookings(ids: BookingId[]): void {\n    const targetId = ids[0]\n    this.connected[targetId] = [\n      ...this.connected[targetId],\n      ...ids.slice(1).map(id => this.connected[id]).flat()\n    ]\n\n    // delete ids except target id\n    ids.slice(1).forEach(id => {\n      delete this.connected[id]\n    })\n  }\n\n  //\n  private connectByPairKey(pairKey: number): void {\n    let starts = this.starts[pairKey]\n    let ends = this.ends[pairKey]\n\n    // find common booking ids\n    const commons = starts.filter(id => {\n      const { start, end } = this.getConnectedData(id)\n      return start === end\n    })\n\n    // if there is common ids, connect them and move to the end of least array\n    // Ex:\n    // starts: [1, 2, 3]\n    // ends: [1, 2, 4, 5, 6]\n    // Result array\n    // starts: [3, [1, 2]]\n    // ends: [4, 5, 6]\n    if (commons.length) {\n      this.connectBookings(commons)\n\n      starts = starts.filter(id => !commons.includes(id))\n      ends = ends.filter(id => !commons.includes(id))\n\n      const targetArr = starts.length < ends.length ? starts : ends\n      targetArr.push(commons[0])\n    }\n\n    // Start connecting the bookings\n    while (starts.length && ends.length) {\n      const startId = starts.shift()\n      const endId = ends.shift()\n      if (!startId || !endId) break;\n      this.connectBookings([endId, startId])\n    }\n  }\n\n}\n\nexport default BookingManager;\n","import React from 'react';\n// @ts-ignore\nimport JSONInput from 'react-json-editor-ajrm';\nimport BookingOrder from './BookingOrder';\n\nimport { Booking } from '../types';\nimport BookingManager from '../booking-manager';\nimport rawData from '../data.json';\n\nimport './App.scss';\n\ninterface AppState {\n  original?: Booking[],\n  optimized?: Booking[],\n  originalRelocations?: number,\n  optimizedRelocations?: number\n}\n\nconst bookingManager = new BookingManager()\n\nclass App extends React.Component<{}, AppState> {\n  private refJsonField: any\n\n  constructor(props: any) {\n    super(props);\n\n    this.state = {}\n\n    this.refJsonField = React.createRef()\n    this.optimize = this.optimize.bind(this)\n  }\n\n  optimize() {\n    const fieldState = this.refJsonField.current.state\n    const jsonData = fieldState.jsObject ? fieldState.jsObject : rawData\n\n    try {\n      bookingManager.optimize(jsonData)\n    } catch(e) {\n      alert('Invalid data')\n      return\n    }\n\n    this.setState({\n      original: bookingManager.original,\n      optimized: bookingManager.optimized,\n      originalRelocations: bookingManager.originalRelocations,\n      optimizedRelocations: bookingManager.optimizedRelocations\n    })\n  }\n\n  render() {\n    const { state } = this\n\n    return (\n      <div className=\"app\">\n        <h1 className=\"app__title\">Booking Order Optimizer</h1>\n\n        <div className=\"app_section\">\n          <h3 className=\"app__subtitle\">Input Data</h3>\n\n          <JSONInput\n            id='editor'\n            placeholder={ rawData }\n            height='400px'\n            theme='light_mitsuketa_tribute'\n            width='100%'\n            ref={this.refJsonField}\n          />\n\n          <p style={{ textAlign: 'center' }}>\n            <button className=\"button\" style={{ marginTop: 18 }} onClick={this.optimize}>\n              Optimize!\n            </button>\n          </p>\n        </div>\n\n        <hr className=\"app_separator\" />\n\n        {\n          state.original && (\n            <React.Fragment>\n              <div className=\"app__section\">\n                <h3 className=\"app__subtitle\">Original Order</h3>\n                <BookingOrder order={state.original} />\n                <p>Relocations: { state.originalRelocations }</p>\n              </div>\n\n              <hr className=\"app__separator\" />\n            </React.Fragment>\n          )\n        }\n\n        {\n          state.optimized && (\n            <div className=\"app__section\">\n              <h3 className=\"app__subtitle\">Optimized Order</h3>\n              <BookingOrder order={ state.optimized } />\n              <p>Relocations: { state.optimizedRelocations }</p>\n            </div>\n          )\n        }\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <App/>\n  , document.getElementById('root'));\n"],"sourceRoot":""}